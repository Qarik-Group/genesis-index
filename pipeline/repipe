#!/bin/bash

PIPELINE=$(cd $(dirname ${BASH_SOURCE[0]}) ; pwd)

GENESIS_INDEX=${GENESIS_INDEX:-https://genesis.starkandwayne.com}
GENESIS_INDEX=${GENESIS_INDEX%%/}

pushd $PIPELINE >/dev/null
	rm -rf releases stemcells
	mkdir releases stemcells

	# FIXME: use the url endpoint (see TODO)
	for repo in $(cat track.releases); do
		release=${repo##*/}
		release=${release%-boshrelease}
		release=${release%-release}
		cat >releases/${release}.yml <<EOF
---
# auto-generated by pipeline/repipe script

groups:
  - name: releases
    jobs:
      - (( append ))
      - ${release}

resources:
  - name: ${release}
    type: bosh-io-release
    source:
      repository: ${repo}

jobs:
  - name: ${release}
    public: true
    serial: false
    plan:
      - get: ${release}
        trigger: true
      - get: version-check-script

      - task: update-index
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
          inputs:
            - name: ${release}
              path: release
            - name: version-check-script
              path: run
          run:
            path: ./run/check-version
            args: []
          params:
            GENESIS_INDEX: (( grab meta.genesis.index ))
            GENESIS_CREDS: (( concat meta.genesis.username ":" meta.genesis.password ))
            CHECK_TYPE:    release
            SUBJECT:       ${release}
EOF
	done

	for stemcell in $(curl -Lsk ${GENESIS_INDEX}/v1/stemcell | jq -r .[]); do
		cat >stemcells/${stemcell}.yml <<EOF
---
# auto-generated by pipeline/repipe script

groups:
  - name: stemcells
    jobs:
      - (( append ))
      - ${stemcell}

resources:
  - name: ${stemcell}
    type: bosh-io-stemcell
    source:
      name: ${stemcell}

jobs:
  - name: ${stemcell}
    public: true
    serial: false
    plan:
      - get: ${stemcell}
        trigger: true
      - get: version-check-script

      - task: update-index
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
          inputs:
            - name: ${stemcell}
              path: stemcell
            - name: version-check-script
              path: run
          run:
            path: ./run/check-version
            args: []
          params:
            GENESIS_INDEX: (( grab meta.genesis.index ))
            GENESIS_CREDS: (( concat meta.genesis.username ":" meta.genesis.password ))
            CHECK_TYPE:    stemcell
            SUBJECT:       ${stemcell}
EOF
	done

	trap "rm -f ${PIPELINE}/.deploy.yml" INT QUIT TERM EXIT
	           spruce merge base.yml releases/*.yml stemcells/*.yml > .deploy.yml  &&
	REDACT=yes spruce merge base.yml releases/*.yml stemcells/*.yml > pipeline.yml &&
	fly --target sw set-pipeline --pipeline genesis-index --config .deploy.yml     &&
	fly --target sw unpause-pipeline --pipeline genesis-index
	rm -rf releases stemcells
popd >/dev/null

echo
echo DONE
